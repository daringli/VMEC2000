name: Build

on: [push, pull_request]

jobs:
  build_linux_wheels:
    name: Build wheels on ubuntu
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2

      - name: Change to python directory
        run: cd python

      - name: Build wheels
        uses: joerick/cibuildwheel@v1.9.0
        # to supply options, put them in 'env', like:
        env:
          # Only build for python 3.{7,8,9}
          CIBW_BUILD : cp37-* cp38-* cp39-*
          # Supports only x86_64 arch for linux
          CIBW_ARCHS_LINUX: x86_64
          # Use manylinux2014
          CIBW_MANYLINUX_X86_64_IMAGE: manylinux2014
          CIBW_SKIP: cp27-manylinux*
          # Install the required libraries on linux
          # Configure MKL repo and install MKL
          CIBW_BEFORE_ALL_LINUX: yum-config-manager --add-repo https://yum.repos.intel.com/ipp/setup/intel-ipp.repo
          CIBW_BEFORE_ALL_LINUX: rpm --import https://yum.repos.intel.com/intel-gpg-keys/GPG-PUB-KEY-INTEL-SW-PRODUCTS-2019.PUB
          CIBW_BEFORE_ALL_LINUX: yum install -y intel-mkl-2020.0-088
          # Install openmpi
          CIBW_BEFORE_ALL_LINUX: yum install -y openmpi-devel-1.10.7-5 openmpi-1.10.7-5
          CIBW_BEFORE_ALL_LINUX: module load mpi
          # Install netcdf
          CIBW_BEFORE_ALL_LINUX: yum install -y netcdf-devel-4.3.3.1-5 netcdf-fortran-devel-4.2-16
          CIBW_BEFORE_ALL_LINUX: export MKLROOT=/opt/intel/mkl
          CIBW_BEFORE_ALL_LINUX: export LD_LIBRARY_PATH=$LD_LIBRARY_PATH:/opt/intel/mkl/lib/intel64:/usr/lib64/openmpi/lib/
          # Install python build dependencies
          CIBW_BEFORE_BUILD: pip install setuptools>=42 wheel scikit-build numpy f90wrap
          # Change to python directory
          CIBW_BEFORE_BUILD: cp centos_gcc_mkl.json cmake_config_file.json

      - uses: actions/upload-artifact@v2
        with:
          path: ./wheelhouse/*.whl
